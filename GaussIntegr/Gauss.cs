namespace Solution;

public delegate double FunctionToIntegrate(double t);

public static class Gauss
{
    private static readonly double[] X = {-0.9894009349916499, -0.9445750230732326,
                                          -0.8656312023878318, -0.7554044083550030,
                                          -0.6178762444026438, -0.4580167776572274,
                                          -0.2816035507792589, -0.0950125098376374,
                                           0.0950125098376374,  0.2816035507792589,
                                           0.4580167776572274,  0.6178762444026438,
                                           0.7554044083550030,  0.8656312023878318,
                                           0.9445750230732326,  0.9894009349916499};


    private static readonly double[] W = {0.0271524594117541, 0.0622535239386479,
                                          0.0951585116824928, 0.1246289712555339,
                                          0.1495959888165767, 0.1691565193950025,
                                          0.1826034150449236, 0.1894506104550685,
                                          0.1894506104550685, 0.1826034150449236,
                                          0.1691565193950025, 0.1495959888165767,
                                          0.1246289712555339, 0.0951585116824928,
                                          0.0622535239386479, 0.0271524594117541};
    public static double Compute(double a, double b, FunctionToIntegrate F)
    {
        double ans = 0.0;
        for (int i = 0; i < Math.Min(X.Length, W.Length); i++)
            ans += W[i] * F(0.5 * ((b - a) * X[i] + (b + a)));
        return 0.5 * (b - a) * ans;
    }
}
